namespace Tetra;

public abstract class Chainable<T>
{
   /* ------------------------------------------------------------ */
   // Private Fields
   /* ------------------------------------------------------------ */

   private readonly Func<T> _next;

   /* ------------------------------------------------------------ */
   // Protected Constructor
   /* ------------------------------------------------------------ */

   protected Chainable
   (
      Func<T> next
   )
      => _next = next;

   /* ------------------------------------------------------------ */
   // Methods
   /* ------------------------------------------------------------ */

   public T Next()
      => _next();

   /* ------------------------------------------------------------ */
}