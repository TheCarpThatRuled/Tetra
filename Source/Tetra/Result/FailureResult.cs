namespace Tetra;

partial class Result<T>
{
   private sealed class FailureResult : Result<T>
   {
      /* ------------------------------------------------------------ */
      // Factory Functions
      /* ------------------------------------------------------------ */

      /* ------------------------------------------------------------ */


      /* ------------------------------------------------------------ */
      // Implicit Operators
      /* ------------------------------------------------------------ */


      /* ------------------------------------------------------------ */


      /* ------------------------------------------------------------ */
      // IEquatable<Result<T>> Methods
      /* ------------------------------------------------------------ */

      public override bool Equals(Result<T>? other)
         => false;

      /* ------------------------------------------------------------ */
      // IEquatable<T> Methods
      /* ------------------------------------------------------------ */

      public override bool Equals(T? other)
         => false;

      /* ------------------------------------------------------------ */
   }
}